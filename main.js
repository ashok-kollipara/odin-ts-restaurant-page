(()=>{"use strict";var n={523:(n,e,t)=>{t.d(e,{A:()=>p});var i=t(354),a=t.n(i),o=t(314),r=t.n(o),s=t(417),c=t.n(s),l=new URL(t(163),t.b),u=r()(a()),d=c()(l);u.push([n.id,`nav {\n    display: flex;\n    justify-content: space-evenly;\n}\n\np, li {\n    font-size: 1.2rem\n}\n\n.navigation {\n    display: flex;\n    justify-content: space-evenly;\n    width: 40vw;\n}\n\n.navigation-buttons {\n    font-size: 1.5rem;\n    border-radius: 0px;\n    border: none;\n    flex-grow: 1;\n    background-color: #f7f7f7;\n    width: 40px;\n    text-wrap: wrap;\n}\n\n.navigation-buttons:hover {\n    text-decoration: underline;\n    background-color: #f8bd1a;\n    cursor: pointer;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    gap: 24px;\n    margin: min(10vh, 30px) min(20vw, 50px);\n    background-color: #f7f7f7;\n}\n\n.header-logo, .footer-logo {\n    background-image: url(${d});\n    background-size: 100% 100%;\n    width: 300px;\n    height: 100px;\n}\n\ndiv#content {\n    margin: 5vh 15vw;\n}\n\nfooter {\n    display: flex;\n    justify-content: center;\n}\n\n.contact-us {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n}\n\nul.contacts {\n    padding: 0px;\n    list-style-type: none;\n    text-align: left;\n    font-size: 1.2rem;\n    line-height: 1.2;\n}\n`,"",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,6BAA6B;AACjC;;AAEA;IACI;AACJ;;AAEA;IACI,aAAa;IACb,6BAA6B;IAC7B,WAAW;AACf;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,YAAY;IACZ,YAAY;IACZ,yBAAyB;IACzB,WAAW;IACX,eAAe;AACnB;;AAEA;IACI,0BAA0B;IAC1B,yBAAyB;IACzB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,oBAAoB;IACpB,SAAS;IACT,uCAAuC;IACvC,yBAAyB;AAC7B;;AAEA;IACI,yDAAwC;IACxC,0BAA0B;IAC1B,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,8BAA8B;AAClC;;AAEA;IACI,YAAY;IACZ,qBAAqB;IACrB,gBAAgB;IAChB,iBAAiB;IACjB,gBAAgB;AACpB",sourcesContent:['nav {\n    display: flex;\n    justify-content: space-evenly;\n}\n\np, li {\n    font-size: 1.2rem\n}\n\n.navigation {\n    display: flex;\n    justify-content: space-evenly;\n    width: 40vw;\n}\n\n.navigation-buttons {\n    font-size: 1.5rem;\n    border-radius: 0px;\n    border: none;\n    flex-grow: 1;\n    background-color: #f7f7f7;\n    width: 40px;\n    text-wrap: wrap;\n}\n\n.navigation-buttons:hover {\n    text-decoration: underline;\n    background-color: #f8bd1a;\n    cursor: pointer;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    gap: 24px;\n    margin: min(10vh, 30px) min(20vw, 50px);\n    background-color: #f7f7f7;\n}\n\n.header-logo, .footer-logo {\n    background-image: url("./restologo.png");\n    background-size: 100% 100%;\n    width: 300px;\n    height: 100px;\n}\n\ndiv#content {\n    margin: 5vh 15vw;\n}\n\nfooter {\n    display: flex;\n    justify-content: center;\n}\n\n.contact-us {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n}\n\nul.contacts {\n    padding: 0px;\n    list-style-type: none;\n    text-align: left;\n    font-size: 1.2rem;\n    line-height: 1.2;\n}\n'],sourceRoot:""}]);const p=u},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(i)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(r[c]=!0)}for(var l=0;l<n.length;l++){var u=[].concat(n[l]);i&&r[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),a&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=a):u[4]="".concat(a)),e.push(u))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var o={},r=[],s=0;s<n.length;s++){var c=n[s],l=i.base?c[0]+i.base:c[0],u=o[l]||0,d="".concat(l," ").concat(u);o[l]=u+1;var p=t(d),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(h);else{var f=a(h,i);i.byIndex=s,e.splice(s,0,{identifier:d,updater:f,references:1})}r.push(d)}return r}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=i(n=n||[],a=a||{});return function(n){n=n||[];for(var r=0;r<o.length;r++){var s=t(o[r]);e[s].references--}for(var c=i(n,a),l=0;l<o.length;l++){var u=t(o[l]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}o=c}}},659:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,a&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},163:(n,e,t)=>{n.exports=t.p+"e82ca092964f7e3a88e8.png"}},e={};function t(i){var a=e[i];if(void 0!==a)return a.exports;var o=e[i]={id:i,exports:{}};return n[i](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");if(i.length)for(var a=i.length-1;a>-1&&(!n||!/^http(s?):/.test(n));)n=i[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0;var i=t(72),a=t.n(i),o=t(825),r=t.n(o),s=t(659),c=t.n(s),l=t(56),u=t.n(l),d=t(540),p=t.n(d),h=t(113),f=t.n(h),A=t(523),g={};g.styleTagTransform=f(),g.setAttributes=u(),g.insert=c().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=p(),a()(A.A,g),A.A&&A.A.locals&&A.A.locals;var m=function(){function n(n,e,t){this.name=n,this.description=e,this.price=t}return n.prototype.getDishHTML=function(){var n=document.createElement("div");return n.classList.add("dish"),n.innerHTML='\n        <p style="font-weight: bold">'.concat(this.name,'</p>\n        <p style="font-style: italic">').concat(this.description,'</p>\n        <p style="font-style: italic; font-weight: 700">Rs.').concat(this.price,"</p>\n        "),n},n}(),v=function(){function n(n){this.name=n,this.dishes=[]}return n.prototype.addDish=function(n){this.dishes.push(n)},n.prototype.getCuisineSectionHTML=function(){var n=document.createElement("div");n.classList.add("cuisine");var e=document.createElement("h2");return e.textContent=this.name,n.appendChild(e),this.dishes.forEach((function(e){n.appendChild(e.getDishHTML())})),n},n}();function y(n){switch(console.log("Inside contentFetcher with trigger: ",n),n){case"menu":return console.log("Rendering menu page"),function(){var n=document.createElement("div");n.classList.add("menuSection");var e=document.createElement("h1");e.textContent="Regional Taste: Must try menu items";var t=new v("Starters");t.addDish(new m("Paddu","Paddu is an Indian dish made by steaming batter using a mould.",156.5));var i=new v("Main Course");i.addDish(new m("Pappu / Andhra Dal","Pappu is an Indian lentil soup made with seasoning of spices and tamarind",278));var a=new v("Desserts");return a.addDish(new m("Payasam","Payasam is a pudding or porridge popular in the Indian subcontinent, usually made by boiling milk, sugar or jaggery, and rice. It can be additionally flavoured with dried fruits, nuts, cardamom and saffron. Instead of rice, it may contain cracked wheat, vermicelli, or tapioca.",116)),n.append(e,t.getCuisineSectionHTML(),i.getCuisineSectionHTML(),a.getCuisineSectionHTML()),n}();case"reserve":return console.log("Rendering reservation page"),function(){var n=document.createElement("div");n.classList.add("bookingSection");var e=document.createElement("h1");e.textContent="Regional Taste: Reservations";var t=document.createElement("div");return t.innerHTML='\n    <h3>Timings</h3>\n    <ul>\n        <li><b>Monday to Friday: </b>8AM to 11PM</li>\n        <li><b>Saturday, Sunday: </b>7AM to 11:30PM</li>\n    </ul>\n\n    <h3>Contact Details</h3>\n    <ul>\n        <li><b>Telephone: </b>080-2345-0987</li>\n        <li><b>Email: </b>enquiry@regional-taste.com</li>\n        <li><b>We always welcome walk-ins</b></li>\n    </ul>\n\n    <h3>Location: </h3>\n    <ul style="list-style-type: none">\n        <li><b>Regional Taste</b></li>\n        <li><b>6th Main, 100FT Road</b></li>\n        <li><b>Defence Colony, Bangalore - 08</b></li>\n    </ul>\n    ',n.append(e,t),n}();default:return console.log("Rendering Home page"),function(){var n=document.createElement("div");n.classList.add("homeSection");var e=document.createElement("h1");e.textContent="Regional Taste: A Culinary Journey Through South Indian Flavors";var t=document.createElement("h2");t.textContent="The Birth of a South Indian Culinary Icon";var i=document.createElement("div");return i.classList.add("about"),i.innerHTML='\n    <p>In 1975, amidst the bustling streets of a vibrant Indian city, a new restaurant emerged that would soon become synonymous with authentic South Indian cuisine. "Regional Taste" opened its doors, promising to bring the rich, diverse flavors of South India to food enthusiasts.</p>\n    \n    <h3>Humble Beginnings</h3>\n    <p>Founded by the passionate culinary expert, Mr. Ramachandran, Regional Taste started as a small, family-run establishment. With just a handful of tables and a menu featuring classic South Indian dishes, the restaurant quickly gained popularity for its authentic flavors and warm hospitality.</p>\n    \n    <h3>Mastering the Art of South Indian Cuisine</h3>\n    <p>From the beginning, Regional Taste set itself apart by focusing exclusively on South Indian cuisine. The restaurant became renowned for its mastery of dishes like:</p>\n    <ul>\n        <li>Dosa: Crispy, fermented crepes served with various chutneys and sambar</li>\n        <li>Idli: Steamed rice cakes, a breakfast staple</li>\n        <li>Vada: Savory, deep-fried lentil donuts</li>\n        <li>Uttapam: Thick pancakes topped with vegetables</li>\n        <li>Kerala-style fish curry: A spicy, coconut-based seafood delicacy</li>\n    </ul>\n    \n    <h3>Expansion and Recognition</h3>\n    <p>Throughout the 1980s and 1990s, Regional Taste\'s reputation grew. The restaurant expanded to accommodate more diners and opened branches in neighboring cities. Food critics praised its commitment to authentic flavors and traditional cooking methods.</p>\n    \n    <h3>Preserving Tradition in a Changing World</h3>\n    <p>As the culinary landscape evolved, Regional Taste remained true to its roots. While many restaurants embraced fusion cuisine, Regional Taste continued to focus on preserving and showcasing traditional South Indian recipes. This dedication to authenticity became its unique selling point.</p>\n    \n    <h3>Community Engagement and Cultural Ambassador</h3>\n    <p>Beyond serving delicious meals, Regional Taste became a cultural ambassador for South Indian cuisine. The restaurant regularly hosted cooking classes, food festivals, and cultural events, educating people about the rich culinary heritage of South India.</p>\n    \n    <h3>Awards and Accolades</h3>\n    <p>Over the years, Regional Taste has received numerous awards for its contribution to South Indian cuisine, including:</p>\n    <ul>\n        <li>Best South Indian Restaurant (multiple years)</li>\n        <li>Cultural Preservation Award</li>\n        <li>Excellence in Traditional Cooking Methods</li>\n    </ul>\n    \n    <h3>Looking to the Future</h3>\n    <p>Today, nearly five decades after its founding, Regional Taste continues to be a beloved institution. While staying true to its traditional roots, the restaurant has embraced modern practices in hygiene, service, and sustainability.</p>',n.append(e,t,i),n}()}}!function(){console.log("Script Init");var n=document.querySelector("body"),e=null==n?void 0:n.querySelector("#home"),t=null==n?void 0:n.querySelector("#menu"),i=null==n?void 0:n.querySelector("#reserve"),a=null==n?void 0:n.querySelector("#content");function o(n){console.log("Got click on button:",this.id,"with event",n.type),null!=a&&(a.innerHTML="",console.log("Appending child to contentdiv",this.id),a.appendChild(y(this.id)))}null==a&&null==a||a.appendChild(y("home")),null==e||e.addEventListener("click",o),null==t||t.addEventListener("click",o),null==i||i.addEventListener("click",o)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,